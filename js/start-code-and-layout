// project
/*-------------------------------- Constants --------------------------------*/
const deck = [];
// const royalCards = 10

/*-------------------------------- Variables --------------------------------*/
// let playerHand;
let dealerHand;
let playerSum;
let dealerSum;
let dealtCard;
let turn;

// Declare variables
let deck1 = [];
let deck2 = [];
let cardToRemove;

/*------------------------ Cached Element References ------------------------*/
const hitMe = document.querySelector("#hit-button");
const stand = document.querySelector("#stand-button");
const newGame = document.querySelector("#new-game-button");

// Cached element references
let deck1El = document.querySelector("#deck-1");
let deck2El = document.querySelector("#deck-2");

let playerHand = document.querySelector("#player-hand");
console.log(playerHand);

/*-------------------------------- Functions --------------------------------*/
const newDeck = () => {
  //when all the cards in the deck are delt, a new deck of is added
  // calls shuffle to randomiz ethe cards
};

const standFunc = () => {
  //called when stand is clicked
  //stores the value of the hand
  //      of whoevers turn it is
  //calls checkhand function
};

const handSumValue = () => {
  //called at the end of a turn
  // so when player hit stand
  // or when dealer hits corret conditions
  // value of cards if >= 17, and less tha n21, and greater than the players hand \
  // add the value of a dealt card to the hand sum
  // calls checkhand function
};

const shuffle = () => {
  // randomizes teh cards in the deck
};

const gameOutcomeMessage = () => {
  // sets a message for each possible game outcome
};

const aceRule = () => {
  // sets the value of an ace card to 11
  // unless the hand is bust
  // then ace equals 1
};

const checkHand = () => {
  // checks sum of hands against each other
  //runs through win logic to determin win/loss/tie
  // If sum > 21, bust
  // If sum = 21, win
  // Greater sum wins
};

const deal = () => {
  //called when the player clicks hit
  // and when player clicks new game
  //deals a card to whoever turn it is from the deck
  // removes a card from teh deck
  // calls function that adds card value to sum
};

const initialize = () => {
  playerSum = null;
  dealerSum = null;
  // gives the player and dealer 2 new cards each
};

//functions
const render = (cardPicked) => {
  if (deck2.length === 1) {
    //deck2El.classList.remove("outline"); //
    // this removes the outline if there is a card in deck 2
    // by removing hte class name outline in the html
  }
  if (deck2.length > 1) {
    //  deck2.shift[0]; //i think this would also work
    //deck2El.classList.remove(cardToRemove); //
  }
  cardToRemove = cardPicked; //
  playerNewCard = document.createElement("div"); //<<
  //playerNewCard.classList.add("new-card");
  //const newCardEl = document.querySelector(".new-card");
  console.log(playerNewCard);
  playerHand.appendChild(playerNewCard);
  playerNewCard.classList.add("card");
  playerNewCard.classList.add("large");
  playerNewCard.classList.add(cardPicked);

  //deck2El.classList.add(cardPicked); //<<
  console.log(playerHand);

  if (deck2.length === 26) {
    deck2El.classList.add("shadow");
    deck1El.classList.remove("shadow");
  }
  if (deck1.length === 0) {
    deck1El.classList.add("outline");
    deck1El.classList.remove("back-blue");
  }

  // Remove outline class when first card is picked
  // Removes previously picked card from deck 2 class list
  // Add current card picked to deck 2 element
  // Adjust shadow when deck gets above/below halfway full
  // Remove card back color and add outline when last card is picked
};

// Function to handle a button click:
const handleClick = () => {
  if (deck1.length > 0) {
    let randomIdx = Math.floor(Math.random() * deck1.length);
    //randomly select a number from cards

    let cardPicked = deck1.splice(randomIdx, 1)[0]; //what does [0] do? - selects the first element in this new array
    // remove that card from deck 1 and assign that card to/a variab;e

    deck2.push(cardPicked);
    // put the card into the second deck

    render(cardPicked);
  }
  // Randomly select number from total cards remaining
  // Assign card with the random index to a variable
  // Add card picked to deck 2
  // Pass card picked to render function to display
};

// initialization function: rn just starts the game with a full deck
// this probs won't work in my newgame button bc in blackjack you keep going until deck is used up
// alt option: have new cards button or restart button
const init = () => {
  deck1 = [
    "dA",
    "dQ",
    "dK",
    "dJ",
    "d10",
    "d09",
    "d08",
    "d07",
    "d06",
    "d05",
    "d04",
    "d03",
    "d02",
    "hA",
    "hQ",
    "hK",
    "hJ",
    "h10",
    "h09",
    "h08",
    "h07",
    "h06",
    "h05",
    "h04",
    "h03",
    "h02",
    "cA",
    "cQ",
    "cK",
    "cJ",
    "c10",
    "c09",
    "c08",
    "c07",
    "c06",
    "c05",
    "c04",
    "c03",
    "c02",
    "sA",
    "sQ",
    "sK",
    "sJ",
    "s10",
    "s09",
    "s08",
    "s07",
    "s06",
    "s05",
    "s04",
    "s03",
    "s02",
  ];
  console.dir(deck1);
};
//make sure to invoke:
init();

/*----------------------------- Event Listeners -----------------------------*/
// hitMe.addEventListener("click", () => {
//   console.log(`button has been clicked`);
// });
// stand.addEventListener("click", () => {
//   console.log(`button has been clicked`);
// });
// newGame.addEventListener("click", () => {
//   console.log(`button has been clicked`);
// });

// Event listeners
document.querySelector("#btn").addEventListener("click", handleClick);


  // <div class="container">
	// 	<div id="player-hand">
  //     <!-- <div id="deck-2" class="card large outline"></div> -->
	//   </div>
  //     <div id="deck-1" class="card large back-blue shadow"></div>
  //   </div>
  //   <button id="btn" class="btn">Flip Card</button>

  //   <header>
  //     <h1>Blackjack</h1>
  //     <p id="result-message"></p>
  //   </header>
  //   <section id="dealer hand">
  //     <div class="card large outline"></div>
  //     <div class="card large back-blue"></div>
  //   </section>
  //   <section class="plyer hand">
	// 	<div class="card large outline"></div>
	// 	<div class="card large outline"></div>
	// </section>
  //     <button id="hit-button">Hit</button>
  //     <button id="stand-button">Stand</button>
  //     <button id="new-game-button">New Game</button>
//   </section>
  
-----
function deal(event) {
  let randomIdx = Math.floor(Math.random() * deck.length);
  let newCard = deck.splice(randomIdx, 1)[0];
  if (event.target === standBtn) {
    dealerHand.push(newCard);
    console.log(dealerHand, "<-dealer hand");
  } else if (event.target === hitmeBtn) {
    playerHand.push(newCard);
    console.log(playerHand, "<-player hand");
  }
  addHand(newCard);
}

  let playerSum = playerHand.value.reduce(function (acc, newCardValue) {
    return acc + newCardValue;
  }, 0);
  let dealerSum = dealerHand.reduce(function (acc, newCardValue) {
    return acc + newCardValue;
  }, 0);

   let playerSum = playerHand.value + ${ newCardValue };